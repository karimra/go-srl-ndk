/**********************************************************************************************************************
 *  Description: interface between router agents and SDK service manager
 *
 *  Copyright (c) 2018 Nokia
 ***********************************************************************************************************************/

syntax = "proto3";

package srlinux.sdk;
option go_package = "nokia.com/srlinux/sdk/protos";

import "sdk_common.proto";

/**
 * Represents BFD session subscription request.
 */
message BfdSessionSubscriptionRequest
{
    BfdmgrGeneralSessionKeyPb key      = 1; // Optional, to filter on name
}

/**
 * Represents BFD session key.
 */
message BfdmgrGeneralSessionKeyPb
{
    /// Represents BFD session type.
    enum BfdmgrSessionType {
        SESSION_TYPE_UNKNOWN = 0;  // Unknown session type
        SESSION_TYPE_P2P = 1;      // Peer-to-peer session type
    }

    IpAddressPb src_ip_addr                     = 1;  // Source IP address of the session
    IpAddressPb dst_ip_addr                     = 2;  // Destination IP address of the session
    uint32      instance_id                     = 3;  // Network instance identifier
    BfdmgrSessionType   type                    = 4;  // Session type
}

/**
 * Represents BFD session data.
 */
message BfdmgrGeneralSessionDataPb
{
    /// Represents BFD session subtype.
    enum BfdmgrSessionSubType {
        SESSION_SUB_TYPE_UNKNOWN = 0;     // Session subtype unknown
        SESSION_SUB_TYPE_SINGLE_HOP = 1;  // Single-hop session
        SESSION_SUB_TYPE_MULTI_HOP = 2;   // Multi-hop session
    }

    /// Represents BFD session status.
    enum BfdmgrSessionStatus {
        INVALID = 0;     // Session invalid
        ADMIN_DOWN = 1;  // Admin down
        DOWN = 2;        // Status down
        INIT = 3;        // Status initializing
        UP = 4;          // Status up and running
    }

    BfdmgrSessionStatus status                  = 1;  // Status of the session
    BfdmgrSessionSubType sub_type               = 2;  // Subtype of the session
    uint32              src_if_id               = 3;  // Source interface ID
}

/**
 * Represents BFD session notification.
 */
message BfdSessionNotification
{
    SdkMgrOperation op                                  = 1;  // Operation such as session create, delete, or update
    BfdmgrGeneralSessionKeyPb  key                      = 2;  // Session key
    BfdmgrGeneralSessionDataPb data                     = 3;  // Session data
}
